variables:
  buildNumber: $[ counter('constant', 13000) ] # Start higher than our AppVeyor versions. Every build (pr or branch) will increment.

name: 2.0.$(buildNumber)
  
pr:
  branches:
    include:
    - master
    - dev

trigger:
  branches:
    include:
    - master
    - dev

jobs:
- job: InitializePipeline
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: AzureKeyVault@1
    inputs:
      # Note: This is actually a Service Connection in DevOps, not an Azure subscription name
      azureSubscription: 'Azure-Functions-Host-CI'
      keyVaultName: 'azure-functions-host-ci'
      secretsFilter: '*'
  - task: PowerShell@2
    displayName: 'Initialize'
    name: Initialize
    inputs:
      filePath: '$(Build.Repository.LocalPath)\build\initialize-pipeline.ps1'

- job: BuildArtifacts_Ubuntu
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        mkdir .dotnet &&
        chmod +x dotnet-install.sh &&
        ./dotnet-install.sh --version 2.2.202 --install-dir .dotnet &&
        PATH=".dotnet:"$PATH && dotnet --info
        dotnet build WebJobs.Script.sln

- job: BuildArtifacts_Windows
  dependsOn: InitializePipeline
  variables:
    includeSuffix: $[ dependencies.InitializePipeline.outputs['Initialize.IncludeSuffix'] ] 
  condition: and(succeeded(), eq(dependencies.InitializePipeline.outputs['Initialize.BypassPackaging'], false))
  pool:
    vmImage: 'vs2017-win2016' 
  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '2.2.x'
      performMultiLevelLookup: true
  - task: PowerShell@2
    displayName: "Build artifacts"
    inputs:
      filePath: '$(Build.Repository.LocalPath)\build.ps1'
      arguments: '-buildNumber "$(buildNumber)" -includeSuffix $true -bypassPackaging $false -signOutput $false'
  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
    displayName: 'ESRP CodeSigning: Authenticode'
    inputs:
      ConnectedServiceName: 'ESRP Service'
      FolderPath: 'src\WebJobs.Script.Abstractions\bin\Release'
      Pattern: Microsoft.Azure.WebJobs.Script.Abstractions*.dll
      signConfigType: inlineSignParams
      inlineOperation: |
        [
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolSign",
            "Parameters": {
              "OpusName": "Microsoft",
              "OpusInfo": "http://www.microsoft.com",
              "FileDigest": "/fd \"SHA256\"",
              "PageHash": "/NPH",
              "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
            },
            "ToolName": "sign",
            "ToolVersion": "1.0"
          },
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolVerify",
            "Parameters": {},
            "ToolName": "sign",
            "ToolVersion": "1.0"
          }
        ]
  - task: DeleteFiles@1
    displayName: 'Delete CodeSignSummary files'
    inputs:
      contents: '**\CodeSignSummary-*.md'
  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
    displayName: 'ESRP CodeSigning: Nupkg'
    inputs:
      ConnectedServiceName: 'ESRP Service'
      FolderPath: '..\..\buildoutput'
      Pattern: 'Microsoft.Azure.WebJobs.Script.Abstractions*.nupkg'
      signConfigType: inlineSignParams
      inlineOperation: |
       [
           {
             "KeyCode": "CP-401405",
             "OperationCode": "NuGetSign",
             "Parameters": {},
             "ToolName": "sign",
             "ToolVersion": "1.0"
           },
           {
             "KeyCode": "CP-401405",
             "OperationCode": "NuGetVerify",
             "Parameters": {},
             "ToolName": "sign",
             "ToolVersion": "1.0"
           }
       ]
  - task: DeleteFiles@1
    displayName: 'Delete CodeSignSummary files'
    inputs:
      contents: '**\CodeSignSummary-*.md'
  - task: CopyFiles@2
    inputs:
      SourceFolder: '..\..\..\buildoutput'
      Contents: '*.nupkg'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: CopyFiles@2
    inputs:
      SourceFolder: '..\..\buildoutput'
      Contents: '*.nupkg'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.Repository.LocalPath)\buildoutput'
      Contents: '*.zip'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - publish: $(Build.ArtifactStagingDirectory)
    artifact: artifacts
